"""new complex data models

Revision ID: 0547d87ab9a1
Revises: 93e6ef5bd277
Create Date: 2025-05-02 20:27:08.546864

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0547d87ab9a1'
down_revision: Union[str, None] = '93e6ef5bd277'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('departments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('faculties',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('code', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('admins',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('position', sa.String(), nullable=True),
    sa.Column('faculty_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['faculty_id'], ['faculties.id'], ),
    sa.ForeignKeyConstraint(['id'], ['users.uni_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('majors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('code', sa.String(), nullable=True),
    sa.Column('faculty_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['faculty_id'], ['faculties.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('teachers',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('department_id', sa.Integer(), nullable=True),
    sa.Column('level', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], ),
    sa.ForeignKeyConstraint(['id'], ['users.uni_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('courses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('code', sa.String(), nullable=True),
    sa.Column('semester', sa.String(), nullable=True),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('credits', sa.Integer(), nullable=True),
    sa.Column('major_id', sa.Integer(), nullable=True),
    sa.Column('mandatory', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['major_id'], ['majors.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_courses_code'), 'courses', ['code'], unique=True)
    op.create_index(op.f('ix_courses_id'), 'courses', ['id'], unique=False)
    op.create_index(op.f('ix_courses_name'), 'courses', ['name'], unique=True)
    op.create_table('students',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('major_id', sa.Integer(), nullable=True),
    sa.Column('semester', sa.String(), nullable=True),
    sa.Column('year', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['users.uni_id'], ),
    sa.ForeignKeyConstraint(['major_id'], ['majors.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('course_activities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.Column('activity_type', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('students_courses',
    sa.Column('student_id', sa.String(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('exam_grade', sa.Float(), nullable=True),
    sa.Column('activity_grade', sa.Float(), nullable=True),
    sa.Column('final_grade', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ),
    sa.PrimaryKeyConstraint('student_id', 'course_id')
    )
    op.create_table('teachers_courses',
    sa.Column('teacher_id', sa.String(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['teachers.id'], ),
    sa.PrimaryKeyConstraint('teacher_id', 'course_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('teachers_courses')
    op.drop_table('students_courses')
    op.drop_table('course_activities')
    op.drop_table('students')
    op.drop_index(op.f('ix_courses_name'), table_name='courses')
    op.drop_index(op.f('ix_courses_id'), table_name='courses')
    op.drop_index(op.f('ix_courses_code'), table_name='courses')
    op.drop_table('courses')
    op.drop_table('teachers')
    op.drop_table('majors')
    op.drop_table('admins')
    op.drop_table('faculties')
    op.drop_table('departments')
    # ### end Alembic commands ###
